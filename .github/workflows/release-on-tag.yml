name: Release on tag

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read
  id-token: write

concurrency:
  group: "release-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{secrets.CUSTOM_GITHUB_TOKEN}}

      - uses: actions/setup-node@v4
        with:
          node-version: 16.x

      - run: npx changelogithub@0.12 # or changelogithub@0.12 if ensure the stable result
        env:
          GITHUB_TOKEN: ${{secrets.CUSTOM_GITHUB_TOKEN}}

      - name: Update CHANGELOG.md
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md
          push_options: --force

  release:
    name: Generate changelog, build and create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build with Next.js
        run: npm run build

      - name: Prepare release zip
        run: |
          set -euo pipefail
          TAG=${{ steps.tag.outputs.tag }}
          ZIP_NAME="release-${TAG}.zip"
          # remove dependency folders and common lockfiles before packaging
          rm -rf node_modules package-lock.json yarn.lock pnpm-lock.yaml npm-shrinkwrap.json || true
          # include build output and public assets (exclude dependency files)
          zip -r "$ZIP_NAME" .next public package.json || true
          ls -lah "$ZIP_NAME"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          files: |
            release-${{ github.ref_name }}.zip

      # - name: Upload release asset (zip)
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./release-${{ steps.tag.outputs.tag }}.zip
      #     asset_name: release-${{ steps.tag.outputs.tag }}.zip
      #     asset_content_type: application/zip
