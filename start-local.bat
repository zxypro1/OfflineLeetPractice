@ECHO OFF
SETLOCAL

:: ======================================================
:: Offline LeetCode Practice System - Local Startup Script (Windows Version)
:: ======================================================

ECHO Offline LeetCode Practice System - Local Startup
ECHO ===================================================
ECHO.

:: Support a non-interactive mode for automation/CI
:: Usage: start-local.bat --yes  OR  set START_LOCAL_NONINTERACTIVE=1 & start-local.bat
SET "NONINTERACTIVE=0"
IF /I "%~1" == "--yes" SET "NONINTERACTIVE=1"
IF /I "%~1" == "-y" SET "NONINTERACTIVE=1"
IF DEFINED START_LOCAL_NONINTERACTIVE IF "%START_LOCAL_NONINTERACTIVE%" == "1" SET "NONINTERACTIVE=1"

:: First-run check: interactive AI configuration for .env if it doesn't exist
IF EXIST ".env" (
    ECHO .env file exists -- skipping AI configuration step. If you want to change AI settings, edit the .env file.
) ELSE (
    IF "%NONINTERACTIVE%" == "1" (
        GOTO :setup_env_noninteractive
    ) ELSE (
        GOTO :setup_env_interactive
    )
)

GOTO :checks

:setup_env_noninteractive
    ECHO No .env file found -- non-interactive mode enabled.
    IF EXIST ".env.example" (
        COPY ".env.example" ".env" > NUL
        ECHO .env created from .env.example (non-interactive). Edit .env to change settings.
    ) ELSE (
        ECHO No .env.example found -- creating minimal .env with defaults and empty keys.
        (
            ECHO # Generated by start-local.bat (non-interactive)
            ECHO # AI provider configuration
            ECHO OPENAI_MODEL=gpt-4-turbo
            ECHO OPENAI_API_KEY=
            ECHO DEEPSEEK_MODEL=deepseek-chat
            ECHO DEEPSEEK_API_KEY=
            ECHO QWEN_MODEL=qwen-turbo
            ECHO QWEN_API_KEY=
            ECHO CLAUDE_MODEL=claude-3-haiku-20240307
            ECHO CLAUDE_API_KEY=
            ECHO OLLAMA_ENDPOINT=http://localhost:11434
            ECHO OLLAMA_MODEL=llama3
            ECHO # Note: To change AI configuration later, edit the .env file.
        ) > .env
    )
    GOTO :checks

:setup_env_interactive
    ECHO No .env file found -- first time startup.
    SET "enable_ai="
    SET /P enable_ai="Would you like to enable AI features? [Y/n]: "
    IF /I NOT "%enable_ai%" == "n" (
        GOTO :configure_ai
    ) ELSE (
        ECHO AI features will be disabled. Creating empty .env file.
        (
            ECHO # Generated by start-local.bat - AI disabled
            ECHO # To enable AI later, edit this .env and add API keys and models.
        ) > .env
        GOTO :checks
    )

:configure_ai
    ECHO Creating .env and configuring AI providers...
    (ECHO # Generated by start-local.bat) > .env
    (ECHO # AI provider configuration) >> .env

    :: OpenAI
    SET "use_openai="
    SET /P use_openai="Enable OpenAI? [Y/n]: "
    IF /I NOT "%use_openai%" == "n" (
        SET "openai_model=gpt-4-turbo"
        SET /P "openai_model=OpenAI model (default: gpt-4-turbo): "
        SET "openai_key="
        SET /P "openai_key=OpenAI API key (paste and press Enter): "
        (ECHO OPENAI_MODEL=%openai_model%) >> .env
        (ECHO OPENAI_API_KEY=%openai_key%) >> .env
    ) ELSE (
        (ECHO OPENAI_API_KEY=) >> .env
    )

    :: DeepSeek
    SET "use_deepseek="
    SET /P use_deepseek="Enable DeepSeek? [y/N]: "
    IF /I "%use_deepseek%" == "y" (
        SET "deepseek_model=deepseek-chat"
        SET /P "deepseek_model=DeepSeek model (default: deepseek-chat): "
        SET "deepseek_key="
        SET /P "deepseek_key=DeepSeek API key (paste and press Enter): "
        (ECHO DEEPSEEK_MODEL=%deepseek_model%) >> .env
        (ECHO DEEPSEEK_API_KEY=%deepseek_key%) >> .env
    ) ELSE (
        (ECHO DEEPSEEK_API_KEY=) >> .env
    )

    :: Qwen
    SET "use_qwen="
    SET /P use_qwen="Enable Qwen? [y/N]: "
    IF /I "%use_qwen%" == "y" (
        SET "qwen_model=qwen-turbo"
        SET /P "qwen_model=Qwen model (default: qwen-turbo): "
        SET "qwen_key="
        SET /P "qwen_key=Qwen API key (paste and press Enter): "
        (ECHO QWEN_MODEL=%qwen_model%) >> .env
        (ECHO QWEN_API_KEY=%qwen_key%) >> .env
    ) ELSE (
        (ECHO QWEN_API_KEY=) >> .env
    )

    :: Claude
    SET "use_claude="
    SET /P use_claude="Enable Claude (Anthropic)? [y/N]: "
    IF /I "%use_claude%" == "y" (
        SET "claude_model=claude-3-haiku-20240307"
        SET /P "claude_model=Claude model (default: claude-3-haiku-20240307): "
        SET "claude_key="
        SET /P "claude_key=Claude API key (paste and press Enter): "
        (ECHO CLAUDE_MODEL=%claude_model%) >> .env
        (ECHO CLAUDE_API_KEY=%claude_key%) >> .env
    ) ELSE (
        (ECHO CLAUDE_API_KEY=) >> .env
    )

    :: Ollama
    SET "use_ollama="
    SET /P use_ollama="Enable Ollama? [y/N]: "
    IF /I "%use_ollama%" == "y" (
        SET "ollama_endpoint=http://localhost:11434"
        SET /P "ollama_endpoint=Ollama endpoint (default: http://localhost:11434): "
        SET "ollama_model=llama3"
        SET /P "ollama_model=Ollama model (default: llama3): "
        (ECHO OLLAMA_ENDPOINT=%ollama_endpoint%) >> .env
        (ECHO OLLAMA_MODEL=%ollama_model%) >> .env
    ) ELSE (
        (ECHO OLLAMA_ENDPOINT=) >> .env
        (ECHO OLLAMA_MODEL=) >> .env
    )

    (ECHO.) >> .env
    (ECHO # Note: To change AI configuration later, edit the .env file.) >> .env
    ECHO AI configuration complete. .env created.
    GOTO :checks

:checks
ECHO.
:: Check if Node.js is installed
WHERE node >nul 2>nul
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error: Node.js not found
    ECHO Please install Node.js: https://nodejs.org
    EXIT /B 1
)
FOR /F "tokens=*" %%v IN ('node --version') DO ECHO Node.js installed: %%v

:: Check if npm is installed
WHERE npm >nul 2>nul
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error: npm not found
    ECHO Please install npm
    EXIT /B 1
)
FOR /F "tokens=*" %%v IN ('npm --version') DO ECHO npm installed: %%v

:: Check if dependencies are installed
IF NOT EXIST "node_modules\" (
    ECHO Installing dependencies...
    npm install
    IF %ERRORLEVEL% NEQ 0 (
        ECHO Failed to install dependencies
        EXIT /B 1
    )
    ECHO Dependencies installed successfully
)

:: Check if project is built
IF NOT EXIST ".next\" (
    ECHO Building application...
    npm run build
    IF %ERRORLEVEL% NEQ 0 (
        ECHO Build failed
        EXIT /B 1
    )
    ECHO Build completed successfully
)

ECHO.
ECHO Starting application...
ECHO URL: http://localhost:3000
ECHO.
ECHO Usage Instructions:
ECHO   - Open http://localhost:3000 in your browser
ECHO   - Fully local execution, no external network required
ECHO   - Press Ctrl+C to stop the server
ECHO   - To add problems: Edit public/problems.json (see MODIFY-PROBLEMS-GUIDE.md)
ECHO   - To change AI settings: Edit the .env file
ECHO   - Changes take effect immediately without rebuilding!
ECHO.

:: Start the application
npm start

ENDLOCAL